//PROCEDURE
PROCEDURE dot_product(v1,v2: ARRAY_OF float,var ps:float)
VAR
    i:INTEGER;
BEGIN
ps:=0
    FOR i FROM 0 TO v1.length-1   DO
    ps:=ps+(v1[i]*v2[i])     
    END_FOR
    return ps;
END
ALGORITHM orthogonal
VAR
    L1,L2: ARRAY_OF arrays;
    ps: float;
    i,n : INTEGER;
BEGIN
    FOR i FROM 0 TO n-1  DO
        IF (L1[i].length=L2[i].length)THEN
        //dot_product(L1[i],L2[i],ps);
        ps:= dot-product(L1[i],L2[i])
          IF  (ps=0) THEN
            write ('orthogonal vectors')
          ELSE
            write( 'non orthogonal vectors')
          END_IF
        ELSE write ('ERROR')
        END_IF
    END_FOR
END
// FUNCTION
FUNCTION dot-product(v1,v2:array of float) : float
VAR
    i:integer;
    ps: float:=0;
BEGIN
    FOR i FROM 0 TO v1.length-1   DO
    ps:=ps+(v1[i]*v2[i])     
    END_FOR
    RETURN ps ;
END
